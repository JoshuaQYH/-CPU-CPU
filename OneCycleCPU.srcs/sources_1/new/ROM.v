//////////////////////////////////////////////////////////////////////////////////

module ROM( 
	rd, 
	addr, 
	dataOut
); // 指令存储器模块

	input rd; // 读使能信号
	input [31:0] addr; // 存储器地址 32条指令
	`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2018/05/30 21:39:18
// Design Name: 
// Module Name: ROM
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
output reg [31:0] dataOut; // 输出的指令
	reg [7:0] mem[127:0]; // 存储器定义必须用reg类型，存储器存储单元8位长度，共128个存储单元
    initial begin 
         {mem[0], mem[1], mem[2], mem[3]} = 32'b00000100000000010000000000001000;
         {mem[4], mem[5], mem[6], mem[7]} = 32'b01000000000000100000000000000010;
         {mem[8], mem[9], mem[10], mem[11]} = 32'b00000000010000010001100000000000;
         {mem[12], mem[13], mem[14], mem[15]} = 32'b00001000011000100010100000000000;
         {mem[16], mem[17], mem[18], mem[19]} = 32'b01000100101000100010000000000000;
         {mem[20], mem[21], mem[22], mem[23]} = 32'b01001000100000100100000000000000;
         {mem[24], mem[25], mem[26], mem[27]} = 32'b01100000000010000100000001000000;
         {mem[28], mem[29], mem[30], mem[31]} = 32'b11000101000000011111111111111110;
         {mem[32], mem[33], mem[34], mem[35]} = 32'b01101100010001100000000000001000;
         {mem[36], mem[37], mem[38], mem[39]} = 32'b01101100110001110000000000000000;
         {mem[40], mem[41], mem[42], mem[43]} = 32'b00000100111001110000000000001000;
         {mem[44], mem[45], mem[46], mem[47]} = 32'b11000000111000011111111111111110;
         {mem[48], mem[49], mem[50], mem[51]} = 32'b10011000001000100000000000000100;
         {mem[52], mem[53], mem[54], mem[55]} = 32'b10011100001010010000000000000100;
         {mem[56], mem[57], mem[58], mem[59]} = 32'b11100000000000000000000000010000;
         {mem[60], mem[61], mem[62], mem[63]} = 32'b11000100000010100000000000001010;
         {mem[64], mem[65], mem[66], mem[67]} = 32'b11111100000000000000000000000000;
         {mem[68], mem[69], mem[70], mem[71]} = 32'b11111100000000000000000000000000;
	end
	
	//当前指令地址进入，和读取信号
	always @( rd or addr ) begin
		if (rd==1) begin // 为1，读存储器。大端数据存储模式
			dataOut[31:24] = mem[addr];
			dataOut[23:16] = mem[addr+1];
			dataOut[15:8] = mem[addr+2];
			dataOut[7:0] = mem[addr+3];
		end
	end
endmodule